name: Fix Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version to fix (e.g., 9)'
        required: true

env:
  REGISTRY: ${{ secrets.REGISTRY }}
  GH_TOKEN: ${{ secrets.GH_PAT }}
  YC_TOKEN: ${{ secrets.YC_DOCKER_AUTH }}

jobs:
  fix-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: (Optional) Fix code
        run: |
          echo "üí° –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤–Ω–µ—Å—Ç–∏ –ø—Ä–∞–≤–∫–∏ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ sed –∏–ª–∏ patch"

      - name: Rebuild app
        run: npm run build

      - name: Login to Yandex Container Registry
        run: echo "${{ env.YC_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Build and push Docker image with fix tag
        run: |
          VERSION=${{ github.event.inputs.version }}
          FIX_TAG=release-${VERSION}_fix1
          LATEST_TAG=release-${VERSION}_latest
          
          docker build -t $REGISTRY:$FIX_TAG .
          docker tag $REGISTRY:$FIX_TAG $REGISTRY:$LATEST_TAG

          docker push $REGISTRY:$FIX_TAG
          docker push $REGISTRY:$LATEST_TAG

      - name: Push Git tag
        env:
          TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag release-${{ github.event.inputs.version }}_fix1
          git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} --tags

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install gh -y

      - name: Add comment to GitHub Issue
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          VERSION=${{ github.event.inputs.version }}
          FIX_ID=fix1
          
          ISSUE_NUMBER=$(gh issue list --search "Release $VERSION" --json number -q '.[0].number')
          
          DATE=$(date "+%Y-%m-%d")
          AUTHOR=${{ github.actor }}
          
          PREV_TAG=$(git tag --sort=-creatordate | grep "release-$VERSION" | head -n 1)
          COMMITS=$(git log $PREV_TAG..HEAD --pretty=format:"- %s")
          
          COMMENT="üõ† **–§–∏–∫—Å —Ä–µ–ª–∏–∑–∞ $VERSION ($FIX_ID)**  
üìÖ –î–∞—Ç–∞: $DATE  
üë§ –ê–≤—Ç–æ—Ä: @$AUTHOR  
üî¢ –ö–æ–º–º–∏—Ç—ã:
$COMMITS

üì¶ Docker image: \`$REGISTRY:release-$VERSION\_$FIX_ID\`"

          echo "$COMMENT" | gh issue comment "$ISSUE_NUMBER" --body -
