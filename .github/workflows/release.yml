name: Release

on:
  workflow_dispatch:

env:
  REGISTRY: ${{ secrets.REGISTRY }}
  GH_TOKEN: ${{ secrets.GH_PAT }}
  YC_DOCKER_AUTH: ${{ secrets.YC_DOCKER_AUTH }}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Build app
        run: npm run build

      - name: Login to Yandex Container Registry
        run: echo "$YC_DOCKER_AUTH" | docker login --username oauth --password-stdin cr.yandex

      - name: Build Docker image
        run: |
          TAG=release-${{ github.run_number }}
          docker build -t $REGISTRY:$TAG .
          docker tag $REGISTRY:$TAG $REGISTRY:${TAG}_latest

      - name: Push Docker images
        run: |
          TAG=release-${{ github.run_number }}
          docker push $REGISTRY:$TAG
          docker push $REGISTRY:${TAG}_latest

      - name: Create and push git tag
        env:
          TOKEN: ${{ secrets.GH_PAT }}
        run: |
          TAG=release-${{ github.run_number }}
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $TAG
          git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} --tags

      - name: Create release issue
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          REGISTRY: ${{ secrets.REGISTRY }}
          VERSION: ${{ github.run_number }}
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 release-$((VERSION-1)) || echo "")
          if [ -z "$PREV_TAG" ]; then
            COMMITS=$(git log --oneline -n 10) # fallback, last 10 commits
          else
            COMMITS=$(git log $PREV_TAG..HEAD --oneline)
          fi
          ISSUE_TITLE="Release $VERSION"
          ISSUE_BODY="Release date: $(date -u)
Author: ${{ github.actor }}
Version: $VERSION

Commits since last release:
$COMMITS

Docker images:
$REGISTRY:release-$VERSION
$REGISTRY:release-$VERSION_latest"

          gh issue create --title "$ISSUE_TITLE" --body "$ISSUE_BODY"
