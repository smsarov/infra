name: Release

on:
  workflow_dispatch:

env:
  REGISTRY: ${{ secrets.REGISTRY }}
  GH_PAT: ${{ secrets.GH_PAT }}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Build app
        run: npm run build

      - name: Create release branch
        env:
          VERSION: ${{ github.run_number }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b releases/$VERSION
          git push origin releases/$VERSION

      - name: Build Docker images
        env:
          VERSION: ${{ github.run_number }}
        run: |
          docker build -t $REGISTRY:release-$VERSION .
          docker tag $REGISTRY:release-$VERSION $REGISTRY:release-${VERSION}_latest

      - name: Login to Yandex Container Registry
        run: echo ${{ secrets.YC_DOCKER_AUTH }} | docker login --username oauth --password-stdin cr.yandex

      - name: Push Docker images
        env:
          VERSION: ${{ github.run_number }}
        run: |
          docker push $REGISTRY:release-$VERSION
          docker push $REGISTRY:release-${VERSION}_latest

      - name: Create git tag
        env:
          VERSION: ${{ github.run_number }}
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git tag release-$VERSION
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} --tags

      - name: Update CHANGELOG and push
        env:
          VERSION: ${{ github.run_number }}
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 release-$((VERSION-1)) || echo "")
          if [ -z "$PREV_TAG" ]; then
            COMMITS=$(git log --oneline)
          else
            COMMITS=$(git log $PREV_TAG..HEAD --oneline)
          fi
          echo "## Release $VERSION - $(date -u +"%Y-%m-%d")" > changelog_tmp.md
          echo "$COMMITS" >> changelog_tmp.md
          cat CHANGELOG.md >> changelog_tmp.md
          mv changelog_tmp.md CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for release $VERSION"
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} main

      - name: Create Issue
        env:
          VERSION: ${{ github.run_number }}
          REGISTRY: ${{ secrets.REGISTRY }}
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          gh auth login --with-token <<< "$GH_PAT"
          PREV_TAG=$(git describe --tags --abbrev=0 release-$((VERSION-1)) || echo "")
          if [ -z "$PREV_TAG" ]; then
            COMMITS=$(git log --oneline)
          else
            COMMITS=$(git log $PREV_TAG..HEAD --oneline)
          fi
          ISSUE_TITLE="Release $VERSION"
          ISSUE_BODY="Release date: $(date -u)\nAuthor: $GITHUB_ACTOR\nVersion: $VERSION\n\nCommits since last release:\n$COMMITS\n\nDocker images:\n$REGISTRY:release-$VERSION\n$REGISTRY:release-${VERSION}_latest"
          gh issue create --title "$ISSUE_TITLE" --body "$ISSUE_BODY"
